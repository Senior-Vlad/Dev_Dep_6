@model dynamic

@{
    ViewData["Title"] = "Chat";
}



<style>
    html,
    body {
        margin: 0;
        padding: 0;
        height: 100%;
        width: 100%;
        overflow: hidden;
    }

    * {
        box-sizing: border-box;
    }

    .chat-container {
        padding-top: 100px;
        display: flex;
        height: 100vh;
        width: 100vw;
        margin: 0;
        padding: 0;
    }

    .conversation-list {
        width: 25%;
        background-color: #7d7deb;
        /* jasna lawenda */
        color: white;
        padding: 70px 10px 10px 10px;
        overflow-y: auto;
    }

    .chat-area {
        width: 75%;
        background-color: #f4f4f8;
        /* szarość */
        padding: 70px;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
    }

    .message-box {
        flex-grow: 1;
        overflow-y: auto;
        padding: 10px;
        background-color: #fff;
        border: 1px solid #ddd;
        border-radius: 4px;
        margin-bottom: 10px;
    }

    .chat-message {
        margin: 5px 0;
        padding: 8px;
        border-radius: 4px;
        background-color: #e8e8fc;
        /* jasna lawenda */
    }

    .chat-message strong {
        color: #5f5fe8;
        /* ciemniejsza lawenda */
    }

    .input-box {
        display: flex;
        align-items: center;
        padding: 10px;
        background-color: #d9d9f3;
        border-top: 1px solid #b0b0e0;
    }

    input[type="text"] {
        flex-grow: 1;
        padding: 8px;
        border: 1px solid #a6a6d6;
        border-radius: 4px;
        margin-right: 10px;
        font-size: 14px;
        background-color: #fdfdff;
    }

    button {
        padding: 8px 12px;
        border: none;
        background-color: #5f5fe8;
        /* ciemna lawenda */
        color: white;
        border-radius: 4px;
        cursor: pointer;
        font-size: 14px;
    }

    button:hover {
        background-color: #4c4ccc;
    }

    .sidebar h3,
    .conversation-list h3 {
        margin: 0 0 10px 0;
        font-size: 18px;
    }

    .conversation-item {
        padding: 8px;
        margin: 5px 0;
        background-color: #6f6fdf;
        /* pośredni lawendowy */
        border-radius: 4px;
        cursor: pointer;
        color: white;
    }

    .conversation-item:hover {
        background-color: #5f5fe8;
        /* ciemniejsza lawenda */
    }

    .chat-container>div {
        flex-shrink: 0;
    }
</style>

<div class="chat-container">
    <!-- Conversation List -->
    <div class="conversation-list">
        <h3>Rozmowy</h3>
        <div style="margin-bottom: 10px;">
            <input type="text" id="newGroupInput" placeholder="New group name..." />
            <button type="button" onclick="createGroup()">Create</button>
        </div>
        <ul style="list-style: none; padding: 0;">
            <li class="conversation-item" onclick="joinSelectedGroup('General')">General</li>
            <li class="conversation-item" onclick="joinSelectedGroup('Students')">Students</li>
            <li class="conversation-item" onclick="joinSelectedGroup('Secretariate')">Secretariate</li>
        </ul>
    </div>

    <!-- Chat Area -->
    <div class="chat-area">

        <div class="message-box" id="messageBox"></div>

        <div class="input-box">
            <input type="text" id="messageInput" placeholder="Wyślij wiadomość..." aria-label="Message input">
            <button type="button" id="sendBtn">Wyślij</button>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const connection = new signalR.HubConnectionBuilder()
                .withUrl("/chatHub")
                .build();

            let currentGroup = "General";

            connection.start().then(() => {
                console.log("SignalR connected");
                joinGroup(currentGroup);
            }).catch(err => console.error(err.toString()));

            function joinGroup(groupName) {
                connection.invoke("JoinGroup", groupName)
                    .then(() => console.log(`Joined group: ${groupName}`))
                    .catch(err => console.error(err.toString()));
            }
            window.joinSelectedGroup = function (groupName) {
                currentGroup = groupName;
                joinGroup(currentGroup);
                document.getElementById("messageBox").innerHTML = `<p class="chat-message"><em>You joined "${currentGroup}"</em></p>`;
            };
            window.createGroup = function () {
                const input = document.getElementById("newGroupInput");
                const groupName = input.value.trim();

                if (groupName === "") return;

                // Create a new <li> and append it to the group list
                const list = document.querySelector(".conversation-list ul");
                const li = document.createElement("li");
                li.className = "conversation-item";
                li.textContent = groupName;
                li.onclick = function () {
                    joinSelectedGroup(groupName);
                };
                list.appendChild(li);

                // Clear input
                input.value = "";

                // Auto-join the new group
                joinSelectedGroup(groupName);
            };


            connection.on("ReceiveMessage", function (user, message) {
                const messageBox = document.getElementById("messageBox");
                const newMessage = document.createElement("p");
                newMessage.classList.add("chat-message");

                if (user === "System") {
                    newMessage.innerHTML = `<em>${message}</em>`;
                } else {
                    newMessage.innerHTML = `<strong>${user}:</strong> ${message}`;
                }

                messageBox.appendChild(newMessage);
                messageBox.scrollTop = messageBox.scrollHeight;
            });


            document.getElementById("sendBtn").addEventListener("click", function () {
                const input = document.getElementById("messageInput");
                const message = input.value.trim();
                if (message !== "") {
                    connection.invoke("SendGroupMessage", currentGroup, message)
                        .catch(err => console.error(err.toString()));
                    input.value = "";
                }
            });

            document.getElementById("messageInput").addEventListener("keypress", function (event) {
                if (event.key === "Enter") {
                    document.getElementById("sendBtn").click();
                }
            });
        });
    </script>
}
