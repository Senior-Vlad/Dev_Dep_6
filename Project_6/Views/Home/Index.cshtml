@model dynamic

@{
    ViewData["Title"] = "Chat";
}



<style>
    html,
body {
    margin: 0;
    padding: 0;
    height: 100%;
    width: 100%;
    overflow: hidden;
}

* {
    box-sizing: border-box;
}

.chat-container {
    padding-top: 100px;
    display: flex;
    height: 100vh;
    width: 100vw;
    margin: 0;
    padding: 0;
}

.conversation-list {
    width: 25%;
    background-color: #7d7deb; /* jasna lawenda */
    color: white;
    padding: 30px 10px 10px 10px;
    overflow-y: auto;
}

.chat-area {
    width: 75%;
    background-color: #f4f4f8; /* szarość */
    padding: 70px;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
}

.message-box {
    flex-grow: 1;
    overflow-y: auto;
    padding: 10px;
    background-color: #fff;
    border: 1px solid #ddd;
    border-radius: 4px;
    margin-bottom: 10px;
}

.chat-message {
    margin: 5px 0;
    padding: 8px;
    border-radius: 4px;
    background-color: #e8e8fc; /* jasna lawenda */
}

.chat-message strong {
    color: #5f5fe8; /* ciemniejsza lawenda */
}

.input-box {
    display: flex;
    align-items: center;
    padding: 10px;
    background-color: #d9d9f3;
    border-top: 1px solid #b0b0e0;
}

input[type="text"] {
    flex-grow: 1;
    padding: 8px;
    border: 1px solid #a6a6d6;
    border-radius: 4px;
    margin-right: 10px;
    font-size: 14px;
    background-color: #fdfdff;
}

button {
    padding: 8px 12px;
    border: none;
    background-color: #5f5fe8; /* ciemna lawenda */
    color: white;
    border-radius: 4px;
    cursor: pointer;
    font-size: 14px;
}

button:hover {
    background-color: #4c4ccc;
}

.sidebar h3,
.conversation-list h3 {
    margin: 0 0 10px 0;
    font-size: 18px;
}

.conversation-item {
    padding: 8px;
    margin: 5px 0;
    background-color: #6f6fdf; /* pośredni lawendowy */
    border-radius: 4px;
    cursor: pointer;
    color: white;
}

.conversation-item:hover {
    background-color: #5f5fe8; /* ciemniejsza lawenda */
}

.chat-container > div {
    flex-shrink: 0;
}

</style>

<div class="chat-container">
    <!-- Sidebar -->
    @* <div class="sidebar">
        <h3>Menu</h3>
        <ul style="list-style: none; padding: 0;">
            <li><a href="#" style="color: white; text-decoration: none;">Profile</a></li>
            <li><a href="#" style="color: white; text-decoration: none;">Settings</a></li>
            <li><a href="#" style="color: white; text-decoration: none;">Logout</a></li>
        </ul>
    </div> *@

    <!-- Conversation List -->
    <div class="conversation-list">
        <h3>Rozmowy</h3>
        <ul style="list-style: none; padding: 0;">
            <li class="conversation-item" onclick="loadConversation('1')">Czat grupowy</li>
            <li class="conversation-item" onclick="loadConversation('2')">Alice</li>
            <li class="conversation-item" onclick="loadConversation('3')">Bob</li>
        </ul>
    </div>

    <!-- Chat Area -->
    <div class="chat-area">
        <div class="message-box" id="messageBox">
            <p class="chat-message"><strong>Alice:</strong> Hello!</p>
            <p class="chat-message"><strong>User:</strong> Hi there!</p>
        </div>
        <div class="input-box">
            <input type="text" id="messageInput" placeholder="Wyślij wiadomość..." aria-label="Message input"
                onkeypress="handleKeyPress(event)">
            <button type="button" onclick="sendMessage()">Wyślij</button>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const connection = new signalR.HubConnectionBuilder()
                .withUrl("/chatHub")
                .build();

            connection.start().then(() => {
                console.log("SignalR connected");

                document.querySelector("button").addEventListener("click", sendMessage);
            }).catch(err => console.error(err.toString()));

            connection.on("ReceiveMessage", function (user, message) {
                const messageBox = document.getElementById("messageBox");
                const newMessage = document.createElement("p");
                newMessage.classList.add("chat-message");
                newMessage.innerHTML = `<strong>${user}:</strong> ${message}`;
                messageBox.appendChild(newMessage);
                messageBox.scrollTop = messageBox.scrollHeight;
            });

            function sendMessage() {
                const input = document.getElementById("messageInput");
                const message = input.value.trim();
                const user = "User"; // Replace this with actual user logic

                if (message !== "") {
                    connection.invoke("SendMessage", user, message)
                        .catch(err => console.error(err.toString()));
                    input.value = "";
                }
            }

            window.handleKeyPress = function (event) {
                if (event.key === "Enter") {
                    sendMessage();
                }
            }
        });
    </script>

}
